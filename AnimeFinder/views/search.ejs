<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resultado da Busca</title>

    <meta name="description" content="Discover details about your favorite animes with AnimeFinder. Complete information, trailers, and much more!">
    <meta name="author" content="Berghz G">

    <link rel="stylesheet" href="/style/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" integrity="sha384-tViUnnbYAV00FLIhhi3v/dWt3Jxw4gZQcNoSCxCIFNJVCx7/D55/wXsrNIRANwdD" crossorigin="anonymous">
    <style>
        body {
            background-color: #f9f9f9;
        }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .card {
            flex: 1 1 calc(33.333% - 1rem); /* Ocupa 3 colunas em telas grandes */
            max-width: calc(33.333% - 1rem);
        }

        .col-md-4 {
            display: flex;
            justify-content: center; /* Centraliza o conteúdo horizontalmente */
            align-items: center; /* Centraliza o conteúdo verticalmente */
        }

        #videoOne {
            width: 90%; /* Ajuste o tamanho do vídeo conforme necessário */
            height: auto;
            margin: 0 auto; /* Centraliza o vídeo dentro da coluna */
            padding-left: 6px;
            border-radius: 10px;
        }

        /* Aplique a margem à direita apenas em telas grandes */
        @media (min-width: 768px) {
            .card1 {
                margin-right: 1rem;
            }
        }


        @media (max-width: 768px) {
            .card {
                flex: 1 1 100%; /* Em telas menores, ocupa toda a largura */
                max-width: 100%;
            }

            #videoOne {
                width: 100%; /* O vídeo ocupa 100% da largura em dispositivos móveis */
                padding-left: 0;
                padding-right: 0;
                border-radius: 0;
            }
        }

        p {
            text-align: justify;
        }

        footer {
            margin-top: 24px;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="menu">
            <nav class="navbar navbar-expand-lg navbar-light">
                <a href="/" class="navbar-brand">
                    <img src="/images/Logo.png" alt="Logo">
                </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>                
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ml-auto"> 
                        <li class="nav-item active"> 
                            <a class="nav-link" href="https://berghzg.com">About</a> 
                        </li> 
                        <li class="nav-item"> 
                            <a class="nav-link" href="/watched">Watched</a> 
                        </li> 
                        <li class="nav-item"> 
                            <a class="nav-link" href="https://berghzg.com/projects">Other Projects</a> 
                        </li>
                    </ul>
                </div>
            </nav>
        </div>

        <div class="search-container">
            <!-- Campo de texto para busca -->
            <input 
                type="text" 
                id="searchInput" 
                placeholder="Write the anime name or use an image"
                name="animeName"
            >
            
            <!-- Formulário para envio -->
            <form id="searchForm" action="/search" method="post" enctype="multipart/form-data">
                <input type="hidden" id="hiddenAnimeName" name="animeName">
                <!-- Ícone dinâmico (será alternado via JavaScript) -->
                <label for="fileUpload" id="iconLabel">
                    <i class="bi bi-upload" id="iconDynamic" style="cursor: pointer;"></i>
                    <input type="file" id="fileUpload" name="image" style="display: none;">
                </label>
            </form>
        </div>
        
        

        

        <% if (!mainResult && (!otherResults || otherResults.length === 0)) { %>
            <div class="text-center mt-5">
                <img src="/images/maya_outfit.png" alt="Nenhuma busca realizada" class="img-fluid">
                <p class="searchP text-muted mt-3">Perform a search to view the results.</p>
            </div>
        <% } else { %>
            <% if (mainResult) { %>
                <!-- Destaque para o mais relevante -->
                <h1 class="TextSearch">Search Result</h1>
                <div class="card card1 mb-3" id="CardOne">
                    <div class="row g-0">
                        <div class="col-md-4">
                            <!-- Imagem inicial -->
                            <img 
                                src="<%= mainResult.coverImage %>" 
                                class="img-fluid rounded-start" 
                                id="imgOne" 
                                alt="<%= mainResult.title %>"
                            >
                            <!-- Vídeo correspondente -->
                            <video 
                                id="videoOne" 
                                class="img-fluid rounded-start" 
                                style="display: none; width: 100%; height: auto;" 
                                autoplay 
                                muted 
                                loop 
                                playsinline
                            >
                                <source src="<%= mainResult.video %>" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                        </div>
                                                                                
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title"><%= mainResult.title %></h5>
                                <p class="card-text">
                                    <strong>Synopsis:</strong>
                                    <%= mainResult.description 
                                        ? (mainResult.description.length > 860 
                                            ? mainResult.description.substring(0, 860).replace(/(<([^>]+)>)/gi, "") + "..."
                                            : mainResult.description.replace(/(<([^>]+)>)/gi, ""))
                                        : "Synopsis not available" 
                                    %>
                                </p>                                
                                <p class="card-text">Episode: <%= mainResult.episode || "Information not available" %></p>
                                <% if (mainResult.from !== undefined && mainResult.to !== undefined) { %>
                                    <p class="card-text">Time: <%= mainResult.from.toFixed(2) %>s - <%= mainResult.to.toFixed(2) %>s</p>
                                <% } else { %>
                                    <p class="card-text">Time: Information not available</p>
                                <% } %>
                                <p class="card-text">Similarity: <%= (mainResult.match * 100).toFixed(2) %> %</p>
                            
                                <!-- Botão único para o anime principal -->
                                <a href="/details/<%= encodeURIComponent(mainResult.title) %>" class="btn vejaso btn-primary">See More</a>

                            </div>                            
                        </div>
                    </div>
                </div>            
        
                <% if (otherResults && otherResults.length > 0) { %>
                    <h2 id="possh2" class="TextSearch">Others Possibilities</h2>
                    <div class="alav card-container">
                        <% otherResults.forEach((anime) => { %>
                            <div class="card alav">
                                <!-- Corrigir o href para usar anime.title -->
                                <a href="/details/<%= encodeURIComponent(anime.title) %>">
                                    <img src="<%= anime.coverImage %>" class="card-img-top alav" alt="<%= anime.title %>">
                                </a>
                                <div class="card-body alav">
                                    <h5 class="card-title alav"><%= anime.title %></h5>
                                    <p class="card-text olha">
                                        <strong>Synopsis:</strong>
                                        <%= anime.description 
                                            ? (anime.description.length > 860 
                                                ? anime.description.substring(0, 860).replace(/(<([^>]+)>)/gi, "") + "..."
                                                : anime.description.replace(/(<([^>]+)>)/gi, ""))
                                            : "Synopsis not available" 
                                        %>
                                    </p>
                                    <p class="card-text olha">Similarity: <%= (anime.match * 100).toFixed(2) %> %</p>
                                    <!-- Corrigir o href para usar anime.title -->
                                    <a href="/details/<%= encodeURIComponent(anime.title) %>" class="olha btn btn-secondary">See More</a>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } %>                
            <% } %>
        <% } %>
        
    </div>

    <%- include('partials/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Referências aos elementos
        const fileUpload = document.getElementById("fileUpload");
        const searchInput = document.getElementById("searchInput");
        const searchForm = document.getElementById("searchForm");
        const iconDynamic = document.getElementById("iconDynamic"); // Correção: Usando o id correto do ícone
        const iconLabel = document.getElementById("iconLabel");
        const hiddenAnimeName = document.getElementById("hiddenAnimeName");
        
        // Envia o formulário automaticamente ao selecionar um arquivo
        fileUpload.addEventListener("change", (event) => {
            if (event.target.files.length > 0) {
                // Altera o placeholder opcionalmente para mostrar o nome do arquivo
                searchInput.placeholder = event.target.files[0].name;
                
                // Envia o formulário
                searchForm.submit();
            }
        });
        
        // Altera o ícone dinamicamente ao digitar no campo de texto
        searchInput.addEventListener("input", () => {
            hiddenAnimeName.value = searchInput.value.trim(); // Define o valor do campo oculto
            if (searchInput.value.trim() !== "") {
                // Mostra o ícone de lupa e ativa envio manual ao clicar nele
                iconDynamic.className = "bi bi-search"; // Muda o ícone para a lupa
                iconLabel.removeAttribute("for"); // Remove o comportamento de upload
                iconLabel.style.cursor = "pointer"; // Altera o cursor para indicar clicável
                iconLabel.style.transition = "background-color 0.3s ease"; // Transição suave para a cor de fundo
                iconLabel.style.backgroundColor = "rgb(139, 0, 0)"; // Altera a cor de fundo (nova cor)
                iconDynamic.style.color = "white"; // Altera a cor do ícone para branco

                iconLabel.onclick = (event) => {
                    event.preventDefault(); // Previna o comportamento padrão
                    searchForm.submit(); // Submete o formulário manualmente
                };
            } else {
                // Volta para o ícone de upload
                iconDynamic.className = "bi bi-upload"; // Muda o ícone para o upload
                iconLabel.setAttribute("for", "fileUpload"); // Reativa o comportamento de upload
                iconLabel.style.cursor = "default"; // Volta o cursor ao padrão
                iconLabel.style.transition = "background-color 0.3s ease"; // Transição suave para a cor de fundo
                iconLabel.style.backgroundColor = "rgb(245, 79, 79)"; // Volta a cor de fundo para o estado original
                iconDynamic.style.color = ""; // Restaura a cor original do ícone (preto ou o padrão do bootstrap)
                iconLabel.onclick = null; // Remove a ação de clique
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            const image = document.getElementById("imgOne");
            const video = document.getElementById("videoOne");
            const card = document.querySelector(".card");
            
            const searchType = "<%= searchType %>";


            // Checar se o searchType é 'image' e se os elementos de imagem e vídeo existem
            if (searchType === 'image' && image && video) {
                // Quando o mouse passa sobre a imagem
                image.addEventListener("mouseenter", () => {
                    image.style.opacity = "0"; // Fadear a imagem
                    setTimeout(() => {
                        image.style.display = "none"; // Esconde a imagem
                        video.style.display = "block"; // Exibe o vídeo
                        video.style.opacity = "1"; // Torna o vídeo visível
                        video.play(); // Reproduz o vídeo
                        card.classList.add("video-visible"); // Adiciona a classe para aplicar a margem
                    }, 500); // Espera a transição de opacidade terminar antes de alterar o display
                });

                // Quando o mouse sai do vídeo
                video.addEventListener("mouseleave", () => {
                    video.style.opacity = "0"; // Fadear o vídeo
                    setTimeout(() => {
                        video.style.display = "none"; // Esconde o vídeo
                        image.style.display = "block"; // Exibe a imagem
                        image.style.opacity = "1"; // Torna a imagem visível
                        video.pause(); // Pausa o vídeo
                        video.currentTime = 0; // Reseta para o início
                        card.classList.remove("video-visible"); // Remove a classe, removendo a margem
                    }, 500); // Espera a transição de opacidade terminar antes de alterar o display
                });

                // Clique alterna entre imagem e vídeo
                image.addEventListener("click", () => {
                    image.style.opacity = "0"; // Fadear a imagem
                    setTimeout(() => {
                        image.style.display = "none"; // Esconde a imagem
                        video.style.display = "block"; // Exibe o vídeo
                        video.style.opacity = "1"; // Torna o vídeo visível
                        video.play(); // Reproduz o vídeo
                        card.classList.add("video-visible"); // Adiciona a classe para aplicar a margem
                    }, 500); // Espera a transição de opacidade terminar antes de alterar o display
                });

                video.addEventListener("click", () => {
                    video.style.opacity = "0"; // Fadear o vídeo
                    setTimeout(() => {
                        video.style.display = "none"; // Esconde o vídeo
                        image.style.display = "block"; // Exibe a imagem
                        image.style.opacity = "1"; // Torna a imagem visível
                        video.pause(); // Pausa o vídeo
                        video.currentTime = 0; // Reseta para o início
                        card.classList.remove("video-visible"); // Remove a classe, removendo a margem
                    }, 500); // Espera a transição de opacidade terminar antes de alterar o display
                });
            }
        });


</script>   
</body>
</html>